#!/bin/sh

# Checkout the real 'master' so we can view the repo files
here=`pwd`
working_dir=`echo "$here" | sed 's/\/.git$//g'`
app_name=`echo $working_dir | ruby -n -e 'puts split(%r|/|)[2]'`

echo $working_dir
echo $app_name

echo

echo "Checking out master branch"
git --work-tree=$working_dir reset --hard master 2>&1 >> /dev/null

user=`sudo ruby -rubygems  -e "require 'json';puts  JSON.parse(IO.read('/etc/chef/dna.json'))['users'].first['username']"`
hosts=`sudo ruby -rubygems  -e "require 'json';puts  JSON.parse(IO.read('/etc/chef/dna.json'))['members'].join(' ') rescue puts(%x{curl http://169.254.169.254/2008-02-01/meta-data/hostname -s})"`
me=`curl http://169.254.169.254/2008-02-01/meta-data/hostname -s`

pid=$$

echo "~> rsyncing code"
for host in $hosts
do
  echo " ~> to $host"
  if [[ $me != $host ]]
  then (rsync -lrptv -e "ssh -i /home/$user/.ssh/internal" $working_dir/ $user@$host:$working_dir > /tmp/$pid-$host.rsync.log 2>&1 ; echo "$?" > /tmp/$pid-$host.rsync.exitstatus) &
  fi
done

wait

failures=false
for host in $hosts
do
  if [[ $me != $host ]]
  then
    if [[ "0" != `cat /tmp/$pid-$host.rsync.exitstatus` ]]
    then
      echo "** error rsyncing to $host:"
      cat /tmp/$pid-$host.rsync.log
      echo "** cancelling deploy because of rsync failure"
      failures=true
    fi
    rm -f /tmp/$pid-$host.rsync.log /tmp/$pid-$host.rsync.exitstatus
  fi
done

if [[ $failures == true ]]
then
  echo "~> rsync failures on one or more hosts"
  exit 1
else
  echo "~> all hosts rsync'd and up to date"
fi

echo "~> deploying code"
for host in $hosts
do
  echo " ~> on $host"
  if [[ $me == $host ]]
  then sudo /usr/bin/eysd deploy -a $app_name &
  else (ssh -i /home/$user/.ssh/internal $user@$host sudo /usr/bin/eysd deploy -a $app_name > /tmp/$pid-$host.deploy.log 2>&1; echo "$?" > /tmp/$pid-$host.deploy.exitstatus) &
  fi
done

wait

failures=false
for host in $hosts
do
  if [[ $me != $host ]]
  then
    if [[ "0" != `cat /tmp/$pid-$host.deploy.exitstatus` ]]
    then
      echo "** error deploying to $host:"
      cat /tmp/$pid-$host.deploy.log
      echo "** deploy failed on $host"
      failures=true
    fi
    rm -f /tmp/$pid-$host.deploy.log /tmp/$pid-$host.deploy.exitstatus
  fi
done


if [[ $failures == true ]]
then
  echo "~> deploy failed on one or more hosts"
  exit 1
else
  echo "~> deploy fully complete across all servers"
fi
